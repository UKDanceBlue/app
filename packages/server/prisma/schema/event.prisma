model EventImage {
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)
  eventId   Int
  imageId   Int
  event     Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  image     Image    @relation(fields: [imageId], references: [id], onDelete: Cascade)

  @@id([eventId, imageId])
}

model EventOccurrence {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique() @default(uuid()) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)
  fullDay   Boolean  @default(false)
  date      DateTime @db.Timestamptz(6)
  endDate   DateTime @db.Timestamptz(6)
  eventId   Int
  event     Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@index([uuid])
}

model Event {
  id                 Int                @id @default(autoincrement())
  uuid               String             @unique() @default(uuid()) @db.Uuid
  createdAt          DateTime           @default(now()) @db.Timestamptz(6)
  updatedAt          DateTime           @updatedAt @db.Timestamptz(6)
  title              String
  summary            String?
  description        String?
  location           String?
  eventImages        EventImage[]
  eventOccurrences   EventOccurrence[]
  pointOpportunities PointOpportunity[]

  @@index([uuid])
}

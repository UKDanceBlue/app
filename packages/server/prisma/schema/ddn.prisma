model DailyDepartmentNotification {
  id   Int    @id @default(autoincrement())
  uuid String @unique @default(uuid()) @db.Uuid

  division                String?
  department              String?
  effectiveDate           DateTime?                        @db.Date
  processDate             DateTime?                        @db.Date
  pledgedDate             DateTime?                        @db.Date
  transactionDate         DateTime?                        @db.Date
  transactionType         String
  combinedAmount          Decimal
  pledgedAmount           Decimal
  accountNumber           String
  accountName             String
  holdingDestination      String?
  comment                 String?
  secShares               String?
  secType                 String?
  gikType                 String?
  gikDescription          String?
  onlineGift              Boolean
  solicitationCodeId      Int
  solicitationCode        SolicitationCode                 @relation(fields: [solicitationCodeId], references: [id])
  solicitation            String?
  behalfHonorMemorial     String?
  matchingGift            String?
  batchId                 String
  batch                   DailyDepartmentNotificationBatch @relation(fields: [batchId], references: [batchId], onDelete: Cascade, onUpdate: Cascade)
  ukFirstGift             Boolean
  divFirstGift            Boolean
  idSorter                String                           @unique
  combinedDonorName       String
  combinedDonorSalutation String
  combinedDonorSort       String?

  donors DDNDonorLink[]

  transmittalSn String?
  sapDocNum     String?
  sapDocDate    DateTime? @db.Date
  jvDocNum      String?
  jvDocDate     DateTime? @db.Date
  advFeeCcPhil  String?
  advFeeAmtPhil Decimal?
  advFeeCcUnit  String?
  advFeeAmtUnit Decimal?
  advFeeStatus  String?
  hcUnit        String?

  fundraisingEntryWithMeta FundraisingEntryWithMeta? @relation(fields: [fundraisingEntryId], references: [id], map: "DailyDepartmentNotification_fundraisingEntryWithMeta")
  fundraisingEntry         FundraisingEntry          @relation(fields: [fundraisingEntryId], references: [id], map: "DailyDepartmentNotification_fundraisingEntry", onDelete: Cascade)
  fundraisingEntryId       Int                       @unique

  @@index([uuid])
}

model DDNDonor {
  id   Int    @id @default(autoincrement())
  uuid String @unique @default(uuid()) @db.Uuid

  donorId      String   @unique
  giftKey      String?
  name         String?
  deceased     Boolean
  constituency String?
  titleBar     String?
  pm           String?
  degrees      String[]
  emails       String[]

  donations DDNDonorLink[]

  @@index([uuid])
}

model DDNDonorLink {
  donorId Int
  ddnId   Int

  amount   Decimal
  relation String?

  donor DDNDonor                    @relation(fields: [donorId], references: [id])
  ddn   DailyDepartmentNotification @relation(fields: [ddnId], references: [id])

  @@id([donorId, ddnId])
}

model DailyDepartmentNotificationBatch {
  id   Int    @id @default(autoincrement())
  uuid String @unique @default(uuid()) @db.Uuid

  batchId    String                        @unique
  memberDDNs DailyDepartmentNotification[]

  @@index([uuid])
}

model Image {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique() @default(uuid()) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)
  thumbHash Bytes?
  alt       String?
  width     Int
  height    Int

  file   File? @relation(fields: [fileId], references: [id], onDelete: Cascade)
  fileId Int?

  eventImages           EventImage[]
  marathonHourMapImages MarathonHourMapImage[]
  feedItems             FeedItem[]

  @@index([uuid])
}

model File {
  id   Int    @id @default(autoincrement())
  uuid String @unique() @default(uuid()) @db.Uuid

  filename        String
  mimeTypeName    String   @db.VarChar(127)
  mimeSubtypeName String   @db.VarChar(127)
  mimeParameters  String[]
  locationUrl     String

  requiresLogin Boolean @default(false)

  owner   Person? @relation(fields: [ownedBy], references: [id])
  ownedBy Int?

  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)
  images    Image[]

  @@index([uuid])
}

model FundraisingEntry {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique() @default(uuid()) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)

  notes              String?
  enteredByPersonId  Int?
  solicitationCodeId Int?

  enteredByPerson          Person?                      @relation(fields: [enteredByPersonId], references: [id], onDelete: SetNull)
  assignments              FundraisingAssignment[]
  ddn                      DailyDepartmentNotification?
  dbFundsEntry             DBFundsFundraisingEntry?
  solicitationCodeOverride SolicitationCode?            @relation(fields: [solicitationCodeId], references: [id])

  @@index([uuid])
}

// SQL code for FundraisingEntryWithMeta, must include an updated copy in a migration when changing the view
// CREATE VIEW "FundraisingEntryWithMeta" AS
// SELECT "fe"."id",
//   "fe"."uuid",
//   "fe"."createdAt",
//   "fe"."updatedAt",
//   COALESCE(
//     -- Calculate unassigned using db_funds_team_entries if available
//     (
//       SELECT "dft"."amount"
//       FROM "DBFundsFundraisingEntry" "dft"
//       WHERE "fe"."id" = "dft"."fundraisingEntryId"
//     ),
//     -- Otherwise, use combinedAmount from DailyDepartmentNotification
//     (
//       SELECT "ddn"."combinedAmount"
//       FROM "DailyDepartmentNotification" "ddn"
//       WHERE "fe"."id" = "ddn"."fundraisingEntryId"
//     )
//   ) - COALESCE(
//     (
//       SELECT SUM("assignment"."amount")
//       FROM "FundraisingAssignment" "assignment"
//       WHERE "assignment"."fundraisingId" = "fe"."id"
//     ),
//     0::numeric(65, 30)
//   ) AS "unassigned",
//   "fe"."notes",
//   "fe"."enteredByPersonId",
//   "fe"."solicitationCodeId"
// FROM "FundraisingEntry" "fe";

view FundraisingEntryWithMeta {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique @default(uuid()) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)

  unassigned Decimal?

  notes              String?
  enteredByPersonId  Int?
  solicitationCodeId Int?

  enteredByPerson          Person?                      @relation(fields: [enteredByPersonId], references: [id], onDelete: SetNull)
  assignments              FundraisingAssignment[]
  ddn                      DailyDepartmentNotification?
  dbFundsEntry             DBFundsFundraisingEntry?
  solicitationCodeOverride SolicitationCode?            @relation(fields: [solicitationCodeId], references: [id])

  @@index([uuid])
}

model FundraisingAssignment {
  id                  Int                       @id @default(autoincrement())
  uuid                String                    @unique() @default(uuid()) @db.Uuid
  createdAt           DateTime                  @default(now()) @db.Timestamptz(6)
  updatedAt           DateTime                  @updatedAt @db.Timestamptz(6)
  amount              Decimal
  personId            Int
  person              Person                    @relation(fields: [personId], references: [id], onDelete: Cascade)
  parentEntryWithMeta FundraisingEntryWithMeta? @relation(fields: [fundraisingId], references: [id], onDelete: Cascade, map: "fundraising_assignment_parent_entry_with_meta")
  parentEntry         FundraisingEntry          @relation(fields: [fundraisingId], references: [id], onDelete: Cascade, map: "fundraising_assignment_parent_entry")
  fundraisingId       Int
  assignedBy          Int?
  assignedByPerson    Person?                   @relation(fields: [assignedBy], references: [id], onDelete: SetNull, name: "fundraising_assignment_assigned_by_person")

  @@unique([fundraisingId, personId])
  @@index([uuid])
}

model SolicitationCode {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique @default(uuid()) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)
  prefix    String
  code      Int
  name      String?

  teams                     Team[]
  dbFundsTeams              DBFundsTeam[]
  ddns                      DailyDepartmentNotification[]
  fundraisingEntriesWitMeta FundraisingEntryWithMeta[]
  fundraisingEntries        FundraisingEntry[]

  @@unique([prefix, code])
  @@index([uuid])
}

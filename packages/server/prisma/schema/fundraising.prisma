model FundraisingEntry {
  id                          Int                          @id @default(autoincrement())
  uuid                        String                       @unique(map: "FundraisingEntry_uuid_unique") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt                   DateTime                     @default(now()) @db.Timestamptz(6)
  updatedAt                   DateTime                     @updatedAt @db.Timestamptz(6)
  notes                       String?
  originallyEnteredByPersonId Int?                         @map("enteredByPersonId")
  solicitationCodeOverrideId  Int?
  amountOverride              Decimal?                     @db.Decimal(65, 2)
  batchTypeOverride           BatchType?
  donatedByOverride           String?
  donatedOnOverride           DateTime?                    @db.Date
  donatedToOverride           String?
  dbFundsEntry                DBFundsFundraisingEntry?
  ddn                         DailyDepartmentNotification?
  assignments                 FundraisingAssignment[]
  enteredByPerson             Person?                      @relation(fields: [originallyEnteredByPersonId], references: [id], map: "FundraisingEntry_enteredByPersonId_Person_id_fk")
  SolicitationCode            SolicitationCode?            @relation(fields: [solicitationCodeOverrideId], references: [id], map: "FundraisingEntry_solicitationCodeOverrideId_SolicitationCode_id")
}

model FundraisingAssignment {
  id                  Int                       @id @default(autoincrement())
  uuid                String                    @unique(map: "FundraisingAssignment_uuid_unique") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt           DateTime                  @default(now()) @db.Timestamptz(6)
  updatedAt           DateTime                  @updatedAt @db.Timestamptz(6)
  amount              Decimal                   @db.Decimal(65, 2)
  personId            Int
  fundraisingId       Int
  assignedBy          Int?
  assignedByPerson    Person?                   @relation("fundraising_assignment_assigned_by_person", fields: [assignedBy], references: [id], map: "FundraisingAssignment_assignedBy_Person_id_fk")
  parentEntry         FundraisingEntry          @relation(fields: [fundraisingId], references: [id], onDelete: Cascade, map: "fundraising_assignment_parent_entry")
  person              Person                    @relation(fields: [personId], references: [id], onDelete: Cascade, map: "FundraisingAssignment_personId_Person_id_fk")
  parentEntryWithMeta FundraisingEntryWithMeta? @relation(fields: [fundraisingId], references: [id], onDelete: Cascade, map: "fundraising_assignment_parent_entry_with_meta")

  @@unique([personId, fundraisingId], map: "FundraisingAssignment_personId_fundraisingId_unique")
}

model SolicitationCode {
  id                        Int                           @id @default(autoincrement())
  uuid                      String                        @unique(map: "SolicitationCode_uuid_unique") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt                 DateTime                      @default(now()) @db.Timestamptz(6)
  updatedAt                 DateTime                      @updatedAt @db.Timestamptz(6)
  prefix                    String
  code                      Int
  name                      String?
  dbFundsTeams              DBFundsTeam[]
  ddns                      DailyDepartmentNotification[]
  FundraisingEntry          FundraisingEntry[]
  teams                     Team[]
  fundraisingEntriesWitMeta FundraisingEntryWithMeta[]

  @@unique([prefix, code], map: "SolicitationCode_prefix_code_unique")
}

view FundraisingEntryWithMeta {
  id                         Int                          @id
  uuid                       String                       @unique @default(uuid()) @db.Uuid
  createdAt                  DateTime                     @db.Timestamptz(6)
  updatedAt                  DateTime                     @updatedAt @db.Timestamptz(6)
  unassigned                 Decimal?                     @db.Decimal
  amount                     Decimal?                     @db.Decimal
  donatedTo                  String?
  donatedBy                  String?
  donatedOn                  DateTime?                    @db.Timestamp(6)
  notes                      String?
  enteredByPersonId          Int?
  solicitationCodeOverrideId Int?
  batchTypeOverride          BatchType?
  donatedByOverride          String?
  donatedOnOverride          DateTime?                    @db.Date
  donatedToOverride          String?
  amountOverride             Decimal?                     @db.Decimal(65, 2)
  solicitationCodeText       String?
  batchType                  BatchType?
  enteredByPerson            Person?                      @relation(fields: [enteredByPersonId], references: [id], onDelete: SetNull)
  assignments                FundraisingAssignment[]
  ddn                        DailyDepartmentNotification?
  dbFundsEntry               DBFundsFundraisingEntry?
  solicitationCodeOverride   SolicitationCode?            @relation(fields: [solicitationCodeOverrideId], references: [id])

  @@index([uuid])
}

enum BatchType {
  DBFunds
  Check
  Transmittal
  CreditCard
  ACH
  NonCash
  PayrollDeduction
  Unknown
}

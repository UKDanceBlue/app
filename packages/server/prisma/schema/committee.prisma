model Committee {
  id                 Int           @id @default(autoincrement())
  uuid               String        @unique(map: "Committee_uuid_unique") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  identifier         CommitteeName @unique(map: "Committee_identifier_unique")
  parentCommitteeId  Int?
  createdAt          DateTime      @default(now()) @db.Timestamptz(6)
  updatedAt          DateTime      @updatedAt @db.Timestamptz(6)
  parentCommittee    Committee?    @relation("parent_committee", fields: [parentCommitteeId], references: [id], map: "Committee_parentCommitteeId_Committee_id_fk")
  childCommittees    Committee[]   @relation("parent_committee")
  correspondingTeams Team?
}

enum CommitteeName {
  programmingCommittee
  fundraisingCommittee
  communityDevelopmentCommittee
  dancerRelationsCommittee
  familyRelationsCommittee
  techCommittee
  operationsCommittee
  marketingCommittee
  corporateCommittee
  miniMarathonsCommittee
  viceCommittee
  overallCommittee
}

enum CommitteeRole {
  Chair
  Coordinator
  Member
}

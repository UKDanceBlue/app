# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""Actions that the client MUST take if specified"""
enum ClientAction {
  LOGOUT
}

type ConfigurationResource {
  key: String!
}

input CreateConfigurationInput {
  key: String!
}

"""API response"""
type CreateConfigurationResponse {
  """Client actions to perform"""
  clientActions: [ClientAction!]

  """The payload of the response"""
  data: ConfigurationResource

  """Whether the operation was successful"""
  ok: Boolean!

  """The UUID of the created resource"""
  uuid: String!
}

union CreateConfigurationResponseOrError = CreateConfigurationResponse | GraphQLErrorResponse

input CreateImageInput {
  fileName: String!
  mimeType: String!
}

"""API response"""
type CreateImageResponse {
  """Client actions to perform"""
  clientActions: [ClientAction!]

  """The payload of the response"""
  data: ImageResource

  """Whether the operation was successful"""
  ok: Boolean!

  """The UUID of the created resource"""
  uuid: String!
}

union CreateImageResponseOrError = CreateImageResponse | GraphQLErrorResponse

"""API response"""
type DeleteConfigurationResponse {
  """Client actions to perform"""
  clientActions: [ClientAction!]

  """The payload of the response"""
  data: Boolean

  """Whether the operation was successful"""
  ok: Boolean!
}

union DeleteConfigurationResponseOrError = DeleteConfigurationResponse | GraphQLErrorResponse

"""API response"""
type DeleteImageResponse {
  """Client actions to perform"""
  clientActions: [ClientAction!]

  """The payload of the response"""
  data: Boolean

  """Whether the operation was successful"""
  ok: Boolean!
}

union DeleteImageResponseOrError = DeleteImageResponse | GraphQLErrorResponse

"""API response"""
type GetAllConfigurationsResponse {
  """Client actions to perform"""
  clientActions: [ClientAction!]

  """The payload of the response"""
  data: [ConfigurationResource!]

  """Whether the operation was successful"""
  ok: Boolean!
}

union GetAllConfigurationsResponseOrError = GetAllConfigurationsResponse | GraphQLErrorResponse

"""API response"""
type GetConfigurationByIdResponse {
  """Client actions to perform"""
  clientActions: [ClientAction!]

  """The payload of the response"""
  data: ConfigurationResource

  """Whether the operation was successful"""
  ok: Boolean!
}

union GetConfigurationByIdResponseOrError = GetConfigurationByIdResponse | GraphQLErrorResponse

"""API response"""
type GetImageByIdResponse {
  """Client actions to perform"""
  clientActions: [ClientAction!]

  """The payload of the response"""
  data: ImageResource

  """Whether the operation was successful"""
  ok: Boolean!
}

union GetImageByIdResponseOrError = GetImageByIdResponse | GraphQLErrorResponse

"""API response"""
type GetThumbHashByUuidResponse {
  """Client actions to perform"""
  clientActions: [ClientAction!]

  """The payload of the response"""
  data: String

  """Whether the operation was successful"""
  ok: Boolean!
}

union GetThumbHashByUuidResponseOrError = GetThumbHashByUuidResponse | GraphQLErrorResponse

"""API response"""
type GraphQLErrorResponse {
  """Cause of the error, if any. May contain sensitive information"""
  cause: String

  """Client actions to perform"""
  clientActions: [ClientAction!]

  """Error details, explains the problem, but not for end users"""
  details: String

  """Error explanation, can be shown to end users"""
  explanation: String

  """The error message"""
  message: String!

  """Whether the operation was successful"""
  ok: Boolean!
}

type ImageResource {
  alt: String
  height: Int!
  imageData: String
  imageId: ID!
  mimeType: String!
  thumbHash: String
  url: URL
  width: Int!
}

type Mutation {
  createConfiguration(input: CreateConfigurationInput!): CreateConfigurationResponseOrError!
  createImage(input: CreateImageInput!): CreateImageResponseOrError!
  deleteConfiguration(id: String!): DeleteConfigurationResponseOrError
  deleteImage(id: String!): DeleteImageResponseOrError
  setConfiguration(id: String!, input: SetConfigurationInput!): SetConfigurationResponseOrError!
  setImage(id: String!, input: SetImageInput!): SetImageResponseOrError!
}

type Query {
  getAllConfigurations: GetAllConfigurationsResponseOrError!
  getConfigurationById(id: String!): GetConfigurationByIdResponseOrError
  getImageById(id: String!): GetImageByIdResponseOrError
  getThumbHashByUuid(uuid: String!): GetThumbHashByUuidResponseOrError
}

input SetConfigurationInput {
  key: String!
}

"""API response"""
type SetConfigurationResponse {
  """Client actions to perform"""
  clientActions: [ClientAction!]

  """The payload of the response"""
  data: ConfigurationResource

  """Whether the operation was successful"""
  ok: Boolean!
}

union SetConfigurationResponseOrError = GraphQLErrorResponse | SetConfigurationResponse

input SetImageInput {
  fileName: String!
  mimeType: String!
}

"""API response"""
type SetImageResponse {
  """Client actions to perform"""
  clientActions: [ClientAction!]

  """The payload of the response"""
  data: ImageResource

  """Whether the operation was successful"""
  ok: Boolean!
}

union SetImageResponseOrError = GraphQLErrorResponse | SetImageResponse

"""URL custom scalar type"""
scalar URL
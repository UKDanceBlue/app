services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: danceblue
      POSTGRES_PASSWORD: danceblue
      POSTGRES_DB: danceblue
    attach: false
    volumes:
      - database:/var/lib/postgresql/data
    networks:
      database:
        aliases:
          - postgres
    restart: unless-stopped
  server:
    build:
      context: .
      target: server
    image: ghcr.io/ukdanceblue/app-server:${VERSION:-latest}
    networks:
      proxy:
        aliases:
          - ${HOST_PREFIX:-}-server
      database:
    depends_on:
      - postgres
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      SERVE_PATH: /data/serve
      UPLOAD_PATH: /data/serve/uploads
      MAX_FILE_SIZE: 200
      LOG_DIR: /data/logs
      DATABASE_URL: postgres://danceblue:danceblue@postgres:5432/danceblue?schema=danceblue
      SERVE_ORIGIN: https://${HOST_PREFIX:-}.danceblue.org
      LOGGING_LEVEL: ${LOGGING_LEVEL:-info}
      SUPER_ADMIN_LINKBLUE: ${SUPER_ADMIN_LINKBLUE}
    secrets:
      - cookie_secret
      - jwt_secret
      - ms_client_id
      - ms_client_secret
      - expo_access_token
      - dbfunds_api_origin
      - dbfunds_api_key
    volumes:
      - content:/data/serve
    restart: unless-stopped

networks:
  proxy:
    external: true
    name: proxy
  database:
    internal: true

volumes:
  content:
    driver: local
  database:
    driver: local

# Secrets from environment variables (i.e. var: environment: VAR)
# secrets:
#   token:
#     environment: "OAUTH_TOKEN"

secrets:
  cookie_secret:
    environment: "COOKIE_SECRET"
  jwt_secret:
    environment: "JWT_SECRET"
  ms_client_id:
    environment: "MS_CLIENT_ID"
  ms_client_secret:
    file: ${MS_CLIENT_SECRET_FILE:?error}
  expo_access_token:
    file: ${EXPO_ACCESS_TOKEN_FILE:?error}
  dbfunds_api_origin:
    environment: "DBFUNDS_API_ORIGIN"
  dbfunds_api_key:
    file: ${DBFUNDS_API_KEY_FILE:?error}
